{
  "name": "authenticate-pam",
  "version": "0.2.2",
  "scripts": {
    "preinstall": "node-gyp configure && node-gyp build",
    "preuninstall": "rm -rf build/*"
  },
  "main": "build/Release/authenticate_pam.node",
  "description": "Asynchronous PAM authentication for Node.JS",
  "homepage": "https://github.com/RushPL/node-authenticate-pam",
  "author": {
    "name": "Damian Kaczmarek",
    "email": "damian@codecharm.co.uk"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/RushPL/node-authenticate-pam.git"
  },
  "dependencies": {
    "nan": "1.1.0"
  },
  "readme": "node-authenticate-pam\n=====================\n\nAsynchronous PAM authentication for NodeJS 0.10 and 0.12\n\n*You will most likely need to run it as root in most common environments!*\n**Running as non-root on my system (openSUSE 12.1) made a segfault happen somewhere in `libpam`!**\n\nIt tries to superseed the previous and outdated node-pam extension with the following improvements:\n* Allows to provide own service name, for example common-auth or any custom service name defined in `/etc/pam.d`\n* Allows to provide PAM_RHOST via 'remoteHost' option. It is used to provide remote network authentication that will skip any local only authentication methods like for example fingerprint reading.\n* Already mentioned utilization of libuv and node-gyp\n* Proper type checking in C++ code, it throws exception if bad types are given\n* In case of error it passes the error string containing both pam function and `pam_strerror()` results\n\nExample\n=========\n\nSimple usage\n------------\nDefault service_name for `pam_start(2)` is 'login'.\n\n```js\nvar pam = require('authenticate-pam');\npam.authenticate('myusername', 'mysecretpassword', function(err) {\n    if(err) {\n      console.log(err);\n    }\n    else {\n      console.log(\"Authenticated!\");\n    }\n  });\n```\n\nUsage with options:\n-------------------\nProper apps should provide their own service name. Sample services are located in `/etc/pam.d`.\nAs an example lookup a service name file for `sshd`.\nTo do proper network authentication you should also provide `remoteHost` key to the options argument. It will be passed to pam as `PAM_RHOST` (`pam_set_item(2)`)\n\n```js\nvar pam = require('authenticate-pam');\npam.authenticate('rush', 'mysecretpassword', function(err) {\n    if(err) {\n      console.log(err);\n    }\n    else {\n      console.log(\"Authenticated!\");\n    }\n}, {serviceName: 'myapp', remoteHost: 'localhost'});\n```\n    \nInstall\n-------------------\n`npm install authenticate-pam`\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/RushPL/node-authenticate-pam/issues"
  },
  "_id": "authenticate-pam@0.2.2",
  "_from": "authenticate-pam@"
}
